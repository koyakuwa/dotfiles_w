%% 初期設定
x = [0 0 0 0 0 0 0 0 0 0 0 0]';
xd = [0 0 0 0 0 0 0 0 0 0 0 0]';
U = [0 0 0 0]';
Om = [0 0 0 0]';
wm = [0 0 0 0]';
m = 1;
JR = 0.1;
omega = 523.59;
dt = 0.001;
tf = 0.5*60;
xx = [];
d = [];
dw = [];
wwm = [];
i = 0;
g = 9.81;
l = 0.2;
Ix = 0.4 * m * l * l;
Iy = Ix;
Iz = Ix;
z = [0 0 0 0 0 0 0 0 0 0 0 0];
a = [( (Ix-Iy)/Ix );
     ( (-JR)/Ix );
     ( (Iz-Ix)/Iy );
     ( (-JR)/Iy );
     ( (Ix-Iy)/Ix )];
b = [ ( l/Ix );
      ( l/Iy );
      ( l/Iz ) ];
dxd = [ 0 0 0 0 0 0 0 0 0 0 0 0]';
xdh = [ 0 0 0 0 0 0 0 0 0 0 0 0]';
alpha = [ 1 0.1 1 0.1 1 0.1 4 2 2 0.5 2 0.5]';
% alpha = [ 10 2 10 2 2 1 4 2 2 0.5 2 0.5]';

SOC_cc = [];
Isum = [];
SOC0 = 100;          % 初期SOC[%]
SOCd = SOC0;
%FCC = 40 * 3600;    % 満充電容量[C]
FCC = 0.1 * 3600;    % 満充電容量[C]
R0 = 0.450e-3;      % 直達抵抗[ohm]
Rd = 0.500e-3;      % 拡散抵抗[ohm]
Cd = 82000;         % 拡散容量[F]
th0 = [ R0, Rd, Cd, FCC];
Nd = 3;             % フォスター型回路の近似時数
[ fb, hb, Ab, Cb, ymodel ] = batterymodel_foster( Nd );
% motor setting
tau = 1.0; % motor time -constant
Rm = 0.5;  % motor internal resistant
ke = 0.5;
km = 0.5;
r = 1;
Jt = 10;
w0 = 2;
n = 10;
Ct = 0.08;
rho = 1.22;
D = 0.304;
% bb = Ct * rho * ((60/(2*pi))^2) * (D^4);
bb = Ct * rho * (D^4);

dd = 0.05;
Am = (1/tau)+((2*dd*w0)/(n*r*r*r*Jt));
Bm = 1/(tau*km);
Cm = (dd*w0*w0)/(n*r*r*r*Jt);
Ommin = 0.5;
flag = 0;
tm = 0;
im = 0;
SOCmin = 10;
%% シミュレーション
for t = 0:dt:tf
    i = i+1;
    xx(:,i) = x;
    wwm(:,i) = wm;
    xt = x;
    wmt = wm;
    for j = 1:4
        % 帰還タイミング
        if (t > 0.0) && (SOCd > SOCmin)
            xd(7) = 2;
            xd(9) = 0;
            xd(11) = 0;
        else
            xd(7) = 0;
            xd(9) = 0;
            xd(11) = 0;
        end
        % 高度・位置の制御
        z(7) = xd(7) - x(7);
        z(8) = x(8) - ( alpha(7) * (xd(7)  - x(7) ) );
        z(9) = xd(9)-x(9);
        z(10) = x(10) - ( alpha(9)*( xd(9) - x(9) ) );
        z(11) = xd(11) - x(11);
        z(12) = x(12) - ( alpha(11)*( xd(11) - x(11) ) );

        U(1) = ( m / (cos(x(1)) * cos(x(3)) ) )* ...
        ( z(7) + g - ( alpha(7)*( z(8) + ( alpha(7)*z(7) ) ) ) ...
        - ( alpha(8) * z(8) ) );

        ux = ( m / U(1) ) * (z(9)- ( alpha(9) * ( z(10) - ( alpha(9)*z(9) ) ) )...
                             -( alpha(10)*z(10) ) );
        uy = ( m / U(1) ) * (z(11)- ( alpha(11) * ( z(12) - ( alpha(11)*z(11) ) ) )...
                             -( alpha(12)*z(12) ) );
        xd(3) = (-1.0) * m * z(10) / U(1);
        xd(1) = m * z(12) / U(1);
        dxd = xd - xdh;
        % 姿勢の制御
        z(1) = xd(1) - x(1);
        z(2) = x(2) - dxd(1) - ( alpha(1)*z(1) );
        z(3) = xd(3)-x(3);
        z(4) = x(4) - dxd(3) - ( alpha(3)*x(3) );
        z(5) = xd(5)-x(5);
        z(6) = x(6) - dxd(5) - ( alpha(5)*x(5) );

        U(2) = ( z(1) - ( a(3)*x(4)*x(6) ) - ( a(2)*x(4)*omega ) ...
                 - ( alpha(1)*( z(2)+( alpha(1)*z(1) ) ) ...
                            - ( alpha(2)*z(2) ) ) ) / b(1);
        U(3) = ( z(3) - ( a(3)*x(2)*x(6) ) - ( a(4)*x(2)*omega ) ...
                 - ( alpha(3)*( z(4)+( alpha(3)*z(3) ) ) ...
                            - ( alpha(4)*z(4) ) ) ) / b(2);
        U(4) = ( z(5) - ( a(5)*x(2)*x(4) ) ...
                 - ( alpha(5)*( z(6)+( alpha(5)*z(5) ) ) ...
                            - ( alpha(6)*z(6) ) ) ) / b(3);

        Om(1) = (0.25*U(1)/bb) + (0.5*U(2)/bb) - (U(3)/bb) ...
                      - (0.75*U(4)/dd);
        Om(2) = (0.25*U(1)/bb) - (0.5*U(2)/bb) ...
                      + (0.25*U(4)/dd);
        Om(3) = (0.25*U(1)/bb) - (0.5*U(2)/bb) + (U(3)/bb) ...
                      + (0.25*U(4)/dd);
        Om(4) = (0.25*U(1)/bb) + (0.5*U(2)/bb) ...
                      + (0.25*U(4)/dd);
        if(Om(1) < Ommin)
            Om(1) = Ommin;
            flag = 1;
        end
        if(Om(2) < Ommin)
            Om(2) = Ommin;
            flag = 1;
        end
        if(Om(3) < Ommin)
            Om(3) = Ommin;
            flag = 1;
        end
        if(Om(4) < Ommin)
            Om(4) = Ommin;
            flag = 1;
        end
        if flag == 1;
            U(1) = bb*(Om(1) + Om(2) + Om(3) + Om(4));
            U(2) = bb*(-Om(2) + Om(4) );
            U(3) = bb*(Om(1) - Om(3) );
            U(4) = dd*( -Om(1) + Om(2) -Om(3) + Om(4));
            flag = 0;
        end
        Om(1) = sqrt( Om(1) );
        Om(2) = sqrt( Om(2) );
        Om(3) = sqrt( Om(3) );
        Om(4) = sqrt( Om(4) );
        omega = Om(2) + Om(4) - Om(1) - Om(3);
        f = [x(2);
             ( ( x(4)*x(6)*a(1) ) + ( x(4)*a(2)*omega ) + ( b(1)*U(2) ...
                                                          ) );
             x(4);
             ( ( x(2)*x(6)*a(3) ) + ( x(2)*a(4)*omega ) + ( b(2)*U(3) ...
                                                          ) );
             x(6);
             ( ( x(4)*x(2)*a(5) ) + ( b(3)*U(4) ) );
             x(8);
             ( (-g) + ( ( cos(x(1)) * cos(x(3) ) * U(1) / m ) ) );
             x(10);
             ( ux*U(1)/m ) ;
             x(12);
             ( uy*U(1)/m ) ];

        xdh = xd;

        fw = [((Am * wm(1)) + (Bm * Om(1)) + Cm);
              ((Am * wm(2)) + (Bm * Om(2)) + Cm);
              ((Am * wm(3)) + (Bm * Om(3)) + Cm);
              ((Am * wm(4)) + (Bm * Om(4)) + Cm)];

        % ４次のルンゲクッタ
        d(:,j) = f * dt;
        % dw(:,j) = fw * dt;
        x = xt + d(:,j)*0.5;
        % wm = wmt + dw(:,j)*0.5;
        if j == 3
            x = xt + d(:,j);
            % wm = wmt + dw(:,j);
        end
    end
        fw = [(-(Am * wm(1)) + (Bm * Om(1)) + Cm);
              (-(Am * wm(2)) + (Bm * Om(2)) + Cm);
              (-(Am * wm(3)) + (Bm * Om(3)) + Cm);
              (-(Am * wm(4)) + (Bm * Om(4)) + Cm)];

    x = xt + (d(:,1) + d(:,2)*2 + d(:,3)*2 + d(:,4))/6;
    % wm = wmt + (dw(:,1) + dw(:,2)*2 + dw(:,3)*2 + dw(:,4))/6;
    wm = Om*60/(2*pi);
    for k = 1:4
        if (wm(k) > 360)
            I(k) = ((1.08283e-7)*(wm(k)^3)) - (( 1.58558e-4)*(wm(k)^2))...
                   + ( 9.81466e-2*wm(k)) - 19.6357;
        else
            I(k) = 0.20001;
        end
    end
    Isum(i) = I(1)+ I(2) + I(3) + I(4);
    SOC_cc(i) = SOCd -(Isum(i)*dt*100/FCC);
    SOCd = SOC_cc(i);
end
%% 図の設定
% 位置のプロット
figure(1);
grid on
t = 0:dt:tf;
subplot(2,2,1)
plot(t,xx(1,:)*180/pi())
xlim([0 tf]), ylim([-100 100]);
xlabel('Time [s]'), ylabel('\phi [deg]')
subplot(2,2,2)
plot(t,xx(3,:)*180/pi())
xlim([0 tf]), ylim([-100 100]);
xlabel('Time [s]'), ylabel('\theta [deg]')
subplot(2,2,3)
plot(t,xx(5,:)*180/pi())
xlim([0 tf]), ylim([-100 100]);
xlabel('Time [s]'), ylabel('\psi [deg]')
box on
movegui(1,'northwest')
% 姿勢のプロット
figure(2);
grid on
t = 0:dt:tf;
subplot(2,2,1)
plot(t,xx(9,:))
subplot(2,2,2)
plot(t,xx(11,:))
subplot(2,2,3)
plot(t,xx(7,:))
%movegui(2,'center')
movegui(2,'north')

% 軌道のプロット
figure(3);
scatter3(xx(9,:),xx(11,:),xx(7,:))
az = 20;
el = 20;
view(az, el);
movegui(3,'northeast')

% 入力のプロット
figure(4);
grid on
t = 0:dt:tf;
subplot(2,2,1)
plot(t,wwm(1,:))
subplot(2,2,2)
plot(t,wwm(2,:))
subplot(2,2,3)
plot(t,wwm(3,:))
subplot(2,2,4)
plot(t,wwm(4,:))
%movegui(2,'center')
movegui(4,'southwest')

% 電流のプロット
%figure(5);
%grid on
%t = 0:dt:tf;
%plot(t,Isum(:))
%movegui(5,'southeast')

% SOCのプロット
figure(6);
grid on
t = 0:dt:tf;
subplot(2,1,1)
plot(t,xx(7,:))
xlim([0 tf]), ylim([0 2]);
subplot(2,1,2)
plot(t,SOC_cc(:))
xlim([0 tf]), ylim([0 100]);
movegui(6,'southeast')
